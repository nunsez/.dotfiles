#!/usr/bin/env bash

dotfiles_dir="${HOME}/.dotfiles"

main() {
  local public=(greet link unlink remove)

  if [[ -z $1 ]]; then
    usage
  elif ! [[ ${public[*]} =~ $1 ]]; then
    error "Command not found: $1"
  else
    $1
  fi
}

usage() {
  echo usage here
}

greet() {
  echo "hello, dotfiles!"
}

link() {
  echo "Start linking..."

  ln -sf "${dotfiles_dir}/.zshrc" "${HOME}"

  ln -sf "${dotfiles_dir}/.local/bin" "${HOME}/.local"

  ln -sf "${dotfiles_dir}/.fonts.conf" "${HOME}"
  ln -sf "${dotfiles_dir}/.fonts" "${HOME}"

  ln -sf "${dotfiles_dir}/.gitconfig" "${HOME}"
  ln -sf "${dotfiles_dir}/.gitignore_global" "${HOME}"

  ln -sf "${dotfiles_dir}/.config/Code/User/settings.json" "${HOME}/.config/Code/User"
  ln -sf "${dotfiles_dir}/.config/Code/User/syncLocalSettings.json" "${HOME}/.config/Code/User"

  update_font_cache
  success "Done! You can reload shell now."
}

unlink() {
  echo "Start unlinking..."

  command unlink "${HOME}/.zshrc"

  command unlink "${HOME}/.fonts.conf"
  command unlink "${HOME}/.fonts"

  command unlink "${HOME}/.gitconfig"
  command unlink "${HOME}/.gitignore_global"

  command unlink "${dotfiles_dir}/.config/Code/User/settings.json"
  command unlink "${dotfiles_dir}/.config/Code/User/syncLocalSettings.json"

  success "Symlinks removed. Type \"dotfiles remove\" to completely remove dotfiles from system."
}

remove() {
  command unlink "${HOME}/.local/bin"
  rm -rf "${dotfiles_dir}"

  echo Hope to see you again...
}

update_font_cache() {
  fc-cache -f
}

success() {
  printf "\\033[32mSUCCESS:\\033[0m %s\\n" "$@"
}

error() {
  printf "\\033[31mERROR:\\033[0m %s\\n" "$@" >&2
}

main "$@"
